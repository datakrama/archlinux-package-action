name: CI

on:
  push:
    branches:
      - "main"
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - "main"

jobs:
  pretest:
    name: Test (with Dockerfile)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update action.yml to build locally
        run: |
          sed -i 's/.*image\:.*/  image\: \"Dockerfile\"/' action.yml
          cat action.yml

      - name: Get sample PKGBUILD
        run: wget https://github.com/hapakaien/plenti-bin/raw/f5ffaaee02a2119aa16f6b7a27e87e198e096b47/PKGBUILD

      - name: Running test
        uses: ./
        with:
          pkgver: '0.4.26'
          pkgrel: 2
          updpkgsums: true
          srcinfo: true

      - name: Show diff
        run: |
          ls -la
          git diff PKGBUILD
          git diff .SRCINFO

  publish:
    name: Publish OCI image
    needs: pretest
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: OCI metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=edge,branch=main
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  test:
    name: Test (with prebuilt OCI Image)
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get sample PKGBUILD
        run: wget https://github.com/hapakaien/plenti-bin/raw/f5ffaaee02a2119aa16f6b7a27e87e198e096b47/PKGBUILD

      - name: Update action.yml to use edge tagged container image
        if: github.ref == 'refs/heads/main'
        run: |
          REPOSITORY_OWNER=${{ github.repository_owner }}
          REPOSITORY_OWNER=$(echo $REPOSITORY_OWNER | tr '[:upper:]' '[:lower:]')
          
          REPOSITORY_NAME=${{ github.event.repository.name }}
          REPOSITORY_NAME=$(echo $REPOSITORY_NAME | tr '[:upper:]' '[:lower:]')
          
          sed -i "s/.*image\:.*/  image\: \"docker\:\/\/ghcr.io\/${REPOSITORY_OWNER}\/${REPOSITORY_NAME}\:edge\"/" action.yml
          cat action.yml

      - name: Running test
        uses: ./
        with:
          pkgver: '0.4.26'
          pkgrel: 2
          updpkgsums: true
          srcinfo: true

      - name: Show diff
        run: |
          ls -la
          git diff PKGBUILD
          git diff .SRCINFO

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get branch/tag names
        id: branch-name
        uses: tj-actions/branch-names@v5
        with:
          strip_tag_prefix: "v"

      - name: Read changelog
        id: changelog-reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.branch-name.outputs.tag }}
          path: ./CHANGELOG.md

      - name: Create/update release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.branch-name.outputs.tag }}
          name: v${{ steps.branch-name.outputs.tag }}
          body: ${{ steps.changelog-reader.outputs.changes }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
